{"version":3,"sources":["assets\\Scripts\\Enemy.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAAqE;AAE/D,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAC5C,mBAAmB;AACnB,sBAAsB;AACtB,uBAAuB;AACvB,IAAI;AAEJ;IAAmC,yBAAY;IAA/C;QAAA,qEA0DC;QAvDG,WAAK,GAAW,CAAC,CAAC,CAAC;QAClB,YAAM,GAAS,CAAC,EAAE,CAAC;;IAsDxB,CAAC;IApDG,2CAA2C;IAC3C,sBAAM,GAAN;QACI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC7E,IAAI,CAAC,KAAK,GAAG,sBAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,sBAAK,CAAC;IAC/C,CAAC;IAED,sBAAM,GAAN,UAAO,EAAU;QACb,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,KAAK,2BAAU,CAAC,YAAY,EAAE;YAC5D,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;QAE1B,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;YACzC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;SAC9B;QACD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;IAC/B,CAAC;IACG,4BAA4B;IAC5B,4BAA4B;IAC5B,uCAAuC;IACvC,6CAA6C;IAC7C,OAAO;IACP,sBAAsB;IACtB,iCAAiC;IACjC,iCAAiC;IACjC,aAAa;IACb,iCAAiC;IACjC,oCAAoC;IACpC,WAAW;IACX,8BAA8B;IAC9B,oCAAoC;IACpC,6CAA6C;IAC7C,WAAW;IACX,6BAA6B;IAC7B,gCAAgC;IAChC,oCAAoC;IACpC,gCAAgC;IAChC,oCAAoC;IACpC,oCAAoC;IACpC,iBAAiB;IACjB,KAAK;IAKT,gCAAgB,GAAhB,UAAiB,KAAkB,EAAE,IAAiB;QAClD,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACpB,mCAAmC;SACtC;IACL,CAAC;IAzDgB,KAAK;QADzB,OAAO;OACa,KAAK,CA0DzB;IAAD,YAAC;CA1DD,AA0DC,CA1DkC,EAAE,CAAC,SAAS,GA0D9C;kBA1DoB,KAAK","file":"","sourceRoot":"/","sourcesContent":["import MainController, { GameStatus, SPEED } from \"./MainController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n// enum MoveState {\r\n//     MovingLeft = 0,\r\n//     MovingRight = 1,\r\n// }\r\n@ccclass\r\nexport default class Enemy extends cc.Component {\r\n\r\n\r\n    speed: number = -5;\r\n     speedX:number =-10;\r\n    mainController: MainController;\r\n    // state: MoveState = MoveState.MovingLeft;\r\n    onLoad() {\r\n        this.mainController = cc.Canvas.instance.node.getComponent(\"MainController\");\r\n        this.speed = SPEED + Math.random() * SPEED;\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.mainController.gameStatus !== GameStatus.Game_Playing) {\r\n            return;\r\n        }\r\n        this.node.y += this.speed;\r\n        \r\n        if (this.node.x > 540 || this.node.x < -540) {\r\n            this.speedX = -this.speedX;\r\n        }\r\n        this.node.x += this.speedX;\r\n    }\r\n        //this.node.x += this.speed;\r\n        // if (this.node.x < -540) {\r\n        // //     // this.node.x -= this.speed;\r\n        // //     this.state = MoveState.MovingRight;\r\n        // // }\r\n        // switch(this.state){\r\n        //     case MoveState.MovingLeft:\r\n        //     this.node.x += this.speed;\r\n        //     break;\r\n        // // case MoveState.MovingRight:\r\n        // //     this.node.x -= this.speed;\r\n        //     // }\r\n        // // if (this.node.x > 540) {\r\n        // //  // this.node.x -= this.speed;\r\n        // //     this.state = MoveState.MovingRight;\r\n        // //     }\r\n        // //     switch(this.state){\r\n        // // case MoveState.MovingLeft:\r\n        // //     this.node.x += this.speed;\r\n        // //   if  (this.node.x > 540){\r\n        // //     case MoveState.MovingLeft:\r\n        // //     this.node.x += this.speed;\r\n        // //     break;}\r\n        // }}\r\n\r\n    \r\n\r\n\r\n    onCollisionEnter(other: cc.Collider, self: cc.Collider) {\r\n        if (other.tag === 1) {\r\n            this.mainController.addScore();\r\n            this.node.destroy();\r\n            // this.mainController.scoreHigh();\r\n        }\r\n    }\r\n}\r\n\r\n"]}